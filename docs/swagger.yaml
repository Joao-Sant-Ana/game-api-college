definitions:
  handlers.ErrorBadRequest:
    properties:
      message:
        example: Invalid request body
        type: string
    type: object
  handlers.ErrorConflict:
    properties:
      message:
        example: Name already in use
        type: string
    type: object
  handlers.ErrorInternalServer:
    properties:
      message:
        example: Internal server error
        type: string
    type: object
  handlers.ErrorNotFound:
    properties:
      message:
        example: User not found
        type: string
    type: object
  handlers.SuccessResponse:
    properties:
      message:
        example: Operation successful
        type: string
    type: object
  handlers.userCreate:
    properties:
      name:
        example: joao
        type: string
    type: object
  handlers.userUpdate:
    properties:
      name:
        example: joao
        type: string
      wave:
        example: 10
        type: integer
    type: object
  models.User:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      wave:
        type: integer
    type: object
info:
  contact: {}
  description: Simple API for a game made in construct3
  title: Game API
  version: "1.0"
paths:
  /user:
    post:
      consumes:
      - application/json
      description: Creates a user with the given JSON body
      parameters:
      - description: User to create
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.userCreate'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Invalid body error
          schema:
            $ref: '#/definitions/handlers.ErrorBadRequest'
        "500":
          description: Database error
          schema:
            $ref: '#/definitions/handlers.ErrorInternalServer'
      summary: Create a new user
      tags:
      - users
  /users:
    get:
      description: Returns up to 20 users
      produces:
      - application/json
      responses:
        "200":
          description: users
          schema:
            additionalProperties:
              items:
                $ref: '#/definitions/models.User'
              type: array
            type: object
        "404":
          description: No users found message
          schema:
            $ref: '#/definitions/handlers.ErrorNotFound'
        "500":
          description: Database error message
          schema:
            $ref: '#/definitions/handlers.ErrorInternalServer'
      summary: Get list of users
      tags:
      - users
  /users/verify/{name}:
    get:
      description: Verifies if a username already exists
      parameters:
      - description: Username to check
        in: path
        name: name
        required: true
        type: string
      responses:
        "204":
          description: No Content, name available
        "400":
          description: Missing name error
          schema:
            $ref: '#/definitions/handlers.ErrorBadRequest'
        "409":
          description: Name already in use
          schema:
            $ref: '#/definitions/handlers.ErrorConflict'
        "500":
          description: Database error
          schema:
            $ref: '#/definitions/handlers.ErrorInternalServer'
      summary: Check if username is taken
      tags:
      - users
  /users/waves:
    patch:
      consumes:
      - application/json
      description: Updates the wave field for a user by name
      parameters:
      - description: Update payload
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.userUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: User updated message
          schema:
            $ref: '#/definitions/handlers.SuccessResponse'
        "400":
          description: Invalid body error
          schema:
            $ref: '#/definitions/handlers.ErrorBadRequest'
        "404":
          description: User not found error
          schema:
            $ref: '#/definitions/handlers.ErrorNotFound'
        "500":
          description: Database error
          schema:
            $ref: '#/definitions/handlers.ErrorInternalServer'
      summary: Update user's wave field
      tags:
      - users
swagger: "2.0"
